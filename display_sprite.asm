%define BALLW 8
section .data
     ball db 0x00, 0x00, 0x28, 0x28, 0x28, 0x28, 0x00, 0x00
          db 0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00
          db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
          db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
          db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
          db 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28
          db 0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00
          db 0x00, 0x00, 0x28, 0x28, 0x28, 0x28, 0x00, 0x00

     blackBall db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

     upPlate dq 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f
          dq 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f
          dq 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f
          dq 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f

     absPos dw 32160
     xPos dw 160
     yPos dw 100

     lastAbsPos dw 0
     lastXPos dw 0
     lastYPos dw 0

section .text
     displaySprite:
          ; erase last sprite
          mov di, [lastAbsPos]
          mov si, blackBall
          call drawBall
          ; draw new sprite
          mov si, ball
          mov di, [absPos]
          call drawBall

          ; save current position as last position
          mov dx, [xPos]
          mov [lastXPos], dx
          mov dx, [yPos]
          mov [lastYPos], dx
          mov dx, [absPos]
          mov [lastAbsPos], dx
          call moveBall

          ret


     drawBall:
          mov ax, 0xA000
          mov es, ax
          mov dx, 8
          .eachLine:
              mov cx, 8
              rep movsb
              add di, 320-8
              dec dx
              jnz .eachLine
          ret


